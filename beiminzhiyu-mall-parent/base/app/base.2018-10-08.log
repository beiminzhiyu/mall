2018-10-08 00:04:51.818 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 00:09:51.824 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 00:13:26.748 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:13:26.749 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 00:13:26.749 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 00:13:26.749 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 00:13:26.749 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=654321, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 00:13:26.749 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:13:27.195 [http-nio-8083-exec-5] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'likun2017@126.com' for key 'email'
### The error may involve cn.beiminzhiyu.dao.UserDao.insertUser-Inline
### The error occurred while setting parameters
### SQL: INSERT  INTO `mb_user`  (username,password,phone,email,created,updated) VALUES (?, ?,?,?,?,?);
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'likun2017@126.com' for key 'email'
; SQL []; Duplicate entry 'likun2017@126.com' for key 'email'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'likun2017@126.com' for key 'email'] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'likun2017@126.com' for key 'email'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy103.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.insertUser(Unknown Source)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserServiceImpl.java:52)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$7a12be0f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$932aa6a.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-10-08 00:14:14.303 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:14:14.303 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 00:14:14.303 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 00:14:14.303 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 00:14:14.303 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=654321, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 00:14:14.303 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:14:14.336 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 00:14:14.455 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 00:14:14.455 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 00:14:14.455 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 00:14:51.825 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 00:18:20.238 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:18:20.238 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 00:18:20.238 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 00:18:20.238 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 00:18:20.238 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=654321, password=111111, phone=null, email=likun@beiminzhiyu.com, created=null, updated=null)]
2018-10-08 00:18:20.238 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:18:20.250 [http-nio-8083-exec-10] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '654321' for key 'username'
### The error may involve cn.beiminzhiyu.dao.UserDao.insertUser-Inline
### The error occurred while setting parameters
### SQL: INSERT  INTO `mb_user`  (username,password,phone,email,created,updated) VALUES (?, ?,?,?,?,?);
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '654321' for key 'username'
; SQL []; Duplicate entry '654321' for key 'username'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '654321' for key 'username'] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '654321' for key 'username'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy103.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.insertUser(Unknown Source)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserServiceImpl.java:52)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$7a12be0f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$932aa6a.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-10-08 00:18:42.788 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:18:42.788 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 00:18:42.788 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 00:18:42.788 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 00:18:42.788 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=11, password=111111, phone=null, email=likun@beiminzhiyu.com, created=null, updated=null)]
2018-10-08 00:18:42.788 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:18:42.804 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun@beiminzhiyu.com"}}
2018-10-08 00:18:42.923 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 00:18:42.924 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 00:18:42.924 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 00:19:51.826 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 00:24:51.828 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 00:29:51.829 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 00:34:12.200 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:34:12.201 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 00:34:12.201 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 00:34:12.201 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 00:34:12.201 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=11, password=111111, phone=null, email=likun@beiminzhiyu.com, created=null, updated=null)]
2018-10-08 00:34:12.201 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:34:12.221 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun@beiminzhiyu.com"}}
2018-10-08 00:34:12.341 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 00:34:12.341 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 00:34:12.341 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 00:34:51.831 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 00:38:30.954 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:38:30.954 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 00:38:30.954 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 00:38:30.955 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 00:38:30.955 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=11, password=111111, phone=null, email=likun@beiminzhiyu.com, created=null, updated=null)]
2018-10-08 00:38:30.955 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 00:38:30.993 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun@beiminzhiyu.com"}}
2018-10-08 00:38:31.128 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 00:38:31.129 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 00:38:31.129 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 00:39:51.832 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 00:44:51.834 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 01:11:29.678 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 01:11:32.567 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 01:11:32.583 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 01:11:32.583 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 01:11:32.977 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 01:11:36.269 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 01:11:36.269 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 01:11:36.278 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 01:11:36.278 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 01:11:42.624 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 01:11:42.854 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 01:11:43.405 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 01:11:43.405 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 01:11:43.616 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 01:11:43.617 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 01:11:44.004 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 01:11:44.312 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 01:11:44.313 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 01:11:44.313 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 01:11:44.313 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 01:11:44.313 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 01:11:44.313 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 01:11:44.313 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 01:11:44.569 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 01:11:44.572 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 01:11:44.577 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 01:11:44.582 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538932304582 with initial instances count: 3
2018-10-08 01:11:44.602 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538932304602, current=UP, previous=STARTING]
2018-10-08 01:11:44.605 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 01:11:44.683 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 01:11:44.698 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 01:11:44.712 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 01:11:44.745 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 22.912 seconds (JVM running for 24.604)
2018-10-08 01:11:45.912 [RMI TCP Connection(8)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 01:12:40.876 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 01:12:41.096 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:12:41.097 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 01:12:41.097 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 01:12:41.103 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 01:12:41.103 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=122, password=111111, phone=null, email=li_kun2016@126.com, created=null, updated=null)]
2018-10-08 01:12:41.103 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:12:41.171 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"li_kun2016@126.com"}}
2018-10-08 01:12:41.354 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 01:12:41.383 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 01:12:41.384 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 01:15:07.568 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:15:07.568 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 01:15:07.568 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 01:15:07.568 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 01:15:07.568 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun, password=111111, phone=null, email=likun@beiminzhiyu.com, created=null, updated=null)]
2018-10-08 01:15:07.568 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:15:08.021 [http-nio-8083-exec-5] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'likun' for key 'username'
### The error may involve cn.beiminzhiyu.dao.UserDao.insertUser-Inline
### The error occurred while setting parameters
### SQL: INSERT  INTO `mb_user`  (username,password,phone,email,created,updated) VALUES (?, ?,?,?,?,?);
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'likun' for key 'username'
; SQL []; Duplicate entry 'likun' for key 'username'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'likun' for key 'username'] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'likun' for key 'username'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy103.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.insertUser(Unknown Source)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserServiceImpl.java:52)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$7a12be0f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$932aa6a.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-10-08 01:15:31.072 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:15:31.072 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 01:15:31.072 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 01:15:31.072 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 01:15:31.072 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=lik, password=111111, phone=null, email=likun@beiminzhiyu.com, created=null, updated=null)]
2018-10-08 01:15:31.072 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:15:31.170 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun@beiminzhiyu.com"}}
2018-10-08 01:15:31.514 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 01:15:31.514 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 01:15:31.514 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 01:16:44.317 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 01:20:12.473 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:20:12.473 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 01:20:12.473 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 01:20:12.473 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 01:20:12.473 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=lik, password=111111, phone=null, email=likun@beiminzhiyu.cn, created=null, updated=null)]
2018-10-08 01:20:12.473 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:20:12.499 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun@beiminzhiyu.cn"}}
2018-10-08 01:20:12.627 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 01:20:12.627 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 01:20:12.627 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 01:21:44.319 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 01:25:49.599 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:25:49.599 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 01:25:49.600 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 01:25:49.600 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 01:25:49.600 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2018, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 01:25:49.600 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 01:25:49.623 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 01:25:49.741 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 01:25:49.741 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 01:25:49.741 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 09:56:10.305 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 09:56:12.294 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 09:56:12.308 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 09:56:12.308 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 09:56:12.626 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 09:56:13.854 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 09:56:13.855 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 09:56:13.862 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 09:56:13.862 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 09:56:18.994 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 09:56:19.203 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 09:56:19.616 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 09:56:19.616 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 09:56:19.764 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 09:56:19.764 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 09:56:20.019 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 09:56:20.269 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 09:56:20.269 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 09:56:20.269 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 09:56:20.269 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 09:56:20.269 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 09:56:20.270 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 09:56:20.270 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 09:56:20.448 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 09:56:20.449 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 09:56:20.452 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 09:56:20.454 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538963780454 with initial instances count: 3
2018-10-08 09:56:20.463 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538963780463, current=UP, previous=STARTING]
2018-10-08 09:56:20.466 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 09:56:20.573 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 09:56:20.592 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 09:56:20.603 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 09:56:20.623 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.918 seconds (JVM running for 17.739)
2018-10-08 09:56:21.606 [RMI TCP Connection(4)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 09:57:09.757 [http-nio-8083-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 09:57:09.862 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 09:57:09.862 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 09:57:09.862 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 09:57:09.864 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 09:57:09.864 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=lik, password=11111, phone=null, email=null, created=null, updated=null)]
2018-10-08 09:57:09.864 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 09:57:09.923 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserServiceImpl.java:83)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$7a12be0f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$9e1c87cc.login(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-10-08 09:58:48.698 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 09:58:50.885 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 09:58:50.899 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 09:58:50.899 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 09:58:51.129 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 09:58:52.613 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 09:58:52.614 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 09:58:52.622 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 09:58:52.622 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 09:58:57.948 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 09:58:58.165 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 09:58:58.572 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 09:58:58.572 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 09:58:58.705 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 09:58:58.705 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 09:58:58.938 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 09:58:59.163 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 09:58:59.163 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 09:58:59.163 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 09:58:59.163 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 09:58:59.163 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 09:58:59.163 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 09:58:59.163 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 09:58:59.345 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 09:58:59.349 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 09:58:59.353 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 09:58:59.355 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538963939355 with initial instances count: 3
2018-10-08 09:58:59.367 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538963939367, current=UP, previous=STARTING]
2018-10-08 09:58:59.369 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 09:58:59.430 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 09:58:59.447 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 09:58:59.462 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 09:58:59.495 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 16.991 seconds (JVM running for 18.605)
2018-10-08 09:59:00.269 [RMI TCP Connection(4)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 09:59:05.452 [http-nio-8083-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 09:59:05.558 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 09:59:05.558 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 09:59:05.558 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 09:59:05.560 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 09:59:05.560 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=lik, password=11111, phone=null, email=null, created=null, updated=null)]
2018-10-08 09:59:05.560 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 09:59:05.598 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 09:59:05.610 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"用户名或密码错误！！"}
2018-10-08 09:59:05.610 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 09:59:10.832 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 09:59:10.832 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 09:59:10.832 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 09:59:10.832 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 09:59:10.832 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=lik, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 09:59:10.832 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 09:59:10.871 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 09:59:10.874 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-90899c16-04ba-4d03-8eb0-1bc6df6d4bce"},"msg":"success"}
2018-10-08 09:59:10.874 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 10:01:29.293 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 10:01:29.293 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 10:01:29.293 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 10:01:29.293 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 10:01:29.293 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=lik, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 10:01:29.293 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 10:01:29.340 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 10:01:29.340 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-e5a276c7-28f3-4d97-bbf0-fc65088375f9"},"msg":"success"}
2018-10-08 10:01:29.340 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 10:03:59.165 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:06:14.977 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 10:06:16.794 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 10:06:16.808 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 10:06:16.808 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 10:06:17.121 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 10:06:18.320 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 10:06:18.320 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 10:06:18.326 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 10:06:18.326 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 10:06:23.218 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 10:06:23.421 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 10:06:23.854 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 10:06:23.854 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 10:06:23.987 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 10:06:23.987 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 10:06:24.273 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:06:24.523 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 10:06:24.523 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 10:06:24.523 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 10:06:24.523 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 10:06:24.523 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 10:06:24.523 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 10:06:24.523 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 10:06:24.725 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 10:06:24.731 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 10:06:24.737 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 10:06:24.742 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538964384741 with initial instances count: 3
2018-10-08 10:06:24.760 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538964384760, current=UP, previous=STARTING]
2018-10-08 10:06:24.762 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 10:06:24.812 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 10:06:24.823 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 10:06:24.833 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 10:06:24.852 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.004 seconds (JVM running for 16.55)
2018-10-08 10:06:25.618 [RMI TCP Connection(5)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 10:06:32.480 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 10:06:32.617 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 10:06:32.617 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 10:06:32.617 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 10:06:32.619 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 10:06:32.619 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=lik, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 10:06:32.619 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 10:06:32.664 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-3d6bfcd1-bf2a-4c40-b6b1-838b847d02ab,value:48#####
2018-10-08 10:06:32.710 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 10:06:32.721 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-3d6bfcd1-bf2a-4c40-b6b1-838b847d02ab"},"msg":"success"}
2018-10-08 10:06:32.721 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 10:11:24.525 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:15:59.879 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 10:16:01.919 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 10:16:01.933 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 10:16:01.933 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 10:16:02.259 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 10:16:03.506 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 10:16:03.506 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 10:16:03.513 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 10:16:03.513 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 10:16:08.527 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 10:16:08.736 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 10:16:09.139 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 10:16:09.139 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 10:16:09.273 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 10:16:09.273 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 10:16:09.533 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:16:09.757 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 10:16:09.757 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 10:16:09.757 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 10:16:09.757 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 10:16:09.757 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 10:16:09.758 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 10:16:09.758 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 10:16:09.947 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 10:16:09.949 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 10:16:09.951 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 10:16:09.954 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538964969954 with initial instances count: 3
2018-10-08 10:16:09.966 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538964969966, current=UP, previous=STARTING]
2018-10-08 10:16:09.969 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 10:16:10.018 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 10:16:10.040 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 10:16:10.051 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 10:16:10.082 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.693 seconds (JVM running for 17.323)
2018-10-08 10:16:11.017 [RMI TCP Connection(5)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 10:17:19.899 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 10:17:22.085 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 10:17:22.103 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 10:17:22.103 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 10:17:22.442 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 10:17:23.804 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 10:17:23.804 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 10:17:23.812 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 10:17:23.812 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 10:17:28.892 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 10:17:29.087 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 10:17:29.473 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 10:17:29.474 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 10:17:29.622 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 10:17:29.622 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 10:17:29.910 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:17:30.141 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 10:17:30.141 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 10:17:30.141 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 10:17:30.141 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 10:17:30.141 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 10:17:30.141 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 10:17:30.141 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 10:17:30.328 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 10:17:30.330 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 10:17:30.332 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 10:17:30.334 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538965050334 with initial instances count: 3
2018-10-08 10:17:30.343 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538965050343, current=UP, previous=STARTING]
2018-10-08 10:17:30.345 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 10:17:30.400 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 10:17:30.422 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 10:17:30.432 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 10:17:30.460 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 16.142 seconds (JVM running for 17.915)
2018-10-08 10:17:31.256 [RMI TCP Connection(5)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 10:18:25.393 [http-nio-8083-exec-5] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 10:18:25.488 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 10:18:25.488 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 10:18:25.488 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 10:18:25.490 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 10:18:25.490 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[afad]
2018-10-08 10:18:25.490 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 10:18:25.540 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 10:18:25.553 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"token无效或已过期！！"}
2018-10-08 10:18:25.554 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 10:18:46.359 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 10:18:46.360 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 10:18:46.360 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 10:18:46.360 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 10:18:46.360 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-3d6bfcd1-bf2a-4c40-b6b1-838b847d02ab]
2018-10-08 10:18:46.360 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 10:18:46.447 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 10:18:46.452 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538932812000,"email":"likun@beiminzhiyu.cn","id":48,"updated":1538932812000,"username":"lik"},"msg":"success"}
2018-10-08 10:18:46.452 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 10:22:30.143 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:27:30.146 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:32:30.147 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:37:30.150 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:42:30.151 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:47:30.152 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 10:52:30.153 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 11:27:08.259 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 11:27:10.309 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 11:27:10.321 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 11:27:10.321 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 11:27:10.492 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 11:27:11.946 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 11:27:11.946 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 11:27:11.951 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 11:27:11.951 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 11:27:16.834 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 11:27:17.004 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 11:27:17.367 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 11:27:17.367 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 11:27:17.491 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 11:27:17.491 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 11:27:17.723 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 11:27:17.922 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 11:27:17.922 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 11:27:17.922 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 11:27:17.922 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 11:27:17.922 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 11:27:17.922 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 11:27:17.922 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 11:27:18.094 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 11:27:18.096 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 11:27:18.097 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 11:27:18.100 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538969238099 with initial instances count: 4
2018-10-08 11:27:18.108 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538969238108, current=UP, previous=STARTING]
2018-10-08 11:27:18.110 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 11:27:18.158 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 11:27:18.163 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 11:27:18.171 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 11:27:18.192 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.079 seconds (JVM running for 16.567)
2018-10-08 11:27:18.797 [RMI TCP Connection(7)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 11:32:14.509 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 11:32:17.580 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 11:32:17.605 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 11:32:17.605 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 11:32:17.873 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 11:32:19.718 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 11:32:19.718 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 11:32:19.728 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 11:32:19.729 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 11:32:25.411 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 11:32:25.609 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 11:32:26.080 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 11:32:26.080 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 11:32:26.218 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 11:32:26.218 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 11:32:26.516 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 11:32:26.797 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 11:32:26.797 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 11:32:26.797 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 11:32:26.797 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 11:32:26.797 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 11:32:26.797 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 11:32:26.797 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 11:32:27.035 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 11:32:27.037 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 11:32:27.039 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 11:32:27.042 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538969547042 with initial instances count: 4
2018-10-08 11:32:27.054 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538969547054, current=UP, previous=STARTING]
2018-10-08 11:32:27.056 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 11:32:27.134 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 11:32:27.143 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 11:32:27.164 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 18.627 seconds (JVM running for 20.229)
2018-10-08 11:32:27.171 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 11:32:27.887 [RMI TCP Connection(4)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 11:57:57.026 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 11:57:59.157 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 11:57:59.174 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 11:57:59.174 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 11:57:59.367 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 11:58:00.898 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 11:58:00.898 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 11:58:00.905 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 11:58:00.906 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 11:58:06.262 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 11:58:06.473 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 11:58:06.980 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 11:58:06.980 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 11:58:07.150 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 11:58:07.150 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 11:58:07.444 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 11:58:07.770 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 11:58:07.770 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 11:58:07.770 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 11:58:07.770 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 11:58:07.771 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 11:58:07.771 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 11:58:07.771 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 11:58:08.008 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 11:58:08.012 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 11:58:08.018 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 11:58:08.022 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538971088022 with initial instances count: 4
2018-10-08 11:58:08.037 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538971088037, current=UP, previous=STARTING]
2018-10-08 11:58:08.039 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 11:58:08.098 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 11:58:08.117 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 11:58:08.127 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 11:58:08.155 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 16.847 seconds (JVM running for 18.56)
2018-10-08 11:58:08.972 [RMI TCP Connection(5)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 12:02:49.940 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 12:02:51.907 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 12:02:51.921 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 12:02:51.922 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 12:02:52.117 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 12:02:53.412 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:02:53.412 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:02:53.417 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:02:53.417 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:02:58.475 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 12:02:58.659 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 12:02:59.090 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 12:02:59.090 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 12:02:59.224 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 12:02:59.225 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 12:02:59.466 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:02:59.715 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 12:02:59.715 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 12:02:59.715 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 12:02:59.715 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 12:02:59.715 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 12:02:59.715 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 12:02:59.715 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 12:02:59.924 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 12:02:59.926 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 12:02:59.928 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 12:02:59.931 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538971379931 with initial instances count: 4
2018-10-08 12:02:59.943 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538971379943, current=UP, previous=STARTING]
2018-10-08 12:02:59.945 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 12:03:00.003 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 12:03:00.022 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 12:03:00.034 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 12:03:00.065 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.491 seconds (JVM running for 17.117)
2018-10-08 12:03:01.149 [RMI TCP Connection(4)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 12:07:59.717 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:16:55.988 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 12:16:57.994 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 12:16:58.008 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 12:16:58.009 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 12:16:58.195 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 12:16:59.573 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:16:59.574 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:16:59.581 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:16:59.581 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:17:05.895 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 12:17:06.127 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 12:17:06.673 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 12:17:06.673 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 12:17:06.891 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 12:17:06.891 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 12:17:07.269 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:17:07.671 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 12:17:07.671 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 12:17:07.671 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 12:17:07.671 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 12:17:07.671 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 12:17:07.671 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 12:17:07.671 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 12:17:07.996 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 12:17:08.000 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 12:17:08.005 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 12:17:08.010 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538972228010 with initial instances count: 4
2018-10-08 12:17:08.028 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538972228028, current=UP, previous=STARTING]
2018-10-08 12:17:08.031 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 12:17:08.099 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 12:17:08.127 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 12:17:08.139 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 12:17:08.178 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 18.667 seconds (JVM running for 20.491)
2018-10-08 12:17:09.014 [RMI TCP Connection(5)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 12:22:07.676 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:23:21.012 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 12:23:22.940 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 12:23:22.958 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 12:23:22.959 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 12:23:23.127 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 12:23:24.461 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:23:24.461 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:23:24.467 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:23:24.467 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:23:29.281 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 12:23:29.455 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 12:23:29.895 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 12:23:29.895 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 12:23:30.016 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 12:23:30.016 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 12:23:30.238 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:23:30.455 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 12:23:30.455 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 12:23:30.455 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 12:23:30.455 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 12:23:30.455 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 12:23:30.455 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 12:23:30.455 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 12:23:30.632 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 12:23:30.635 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 12:23:30.637 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 12:23:30.640 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538972610639 with initial instances count: 4
2018-10-08 12:23:30.649 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538972610649, current=UP, previous=STARTING]
2018-10-08 12:23:30.651 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 12:23:30.705 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 12:23:30.728 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 12:23:30.738 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 12:23:30.762 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.089 seconds (JVM running for 16.758)
2018-10-08 12:23:31.676 [RMI TCP Connection(2)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 12:28:30.459 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:33:30.461 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:36:54.439 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 12:36:56.154 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 12:36:56.166 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 12:36:56.166 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 12:36:56.341 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 12:36:57.526 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:36:57.526 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:36:57.533 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:36:57.533 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:37:02.220 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 12:37:02.390 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 12:37:02.775 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 12:37:02.775 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 12:37:02.890 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 12:37:02.890 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 12:37:03.118 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:37:03.335 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 12:37:03.335 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 12:37:03.335 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 12:37:03.335 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 12:37:03.336 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 12:37:03.336 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 12:37:03.336 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 12:37:03.495 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 12:37:03.496 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 12:37:03.498 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 12:37:03.500 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538973423500 with initial instances count: 4
2018-10-08 12:37:03.509 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538973423509, current=UP, previous=STARTING]
2018-10-08 12:37:03.511 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 12:37:03.552 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 12:37:03.563 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 12:37:03.573 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 12:37:03.595 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 14.046 seconds (JVM running for 15.497)
2018-10-08 12:37:04.236 [RMI TCP Connection(5)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 12:42:03.338 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:47:03.340 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:52:03.341 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:54:21.477 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 12:54:23.334 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 12:54:23.353 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 12:54:23.353 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 12:54:23.557 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 12:54:24.828 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:54:24.828 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:54:24.833 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 12:54:24.834 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 12:54:29.646 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 12:54:29.825 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 12:54:30.215 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 12:54:30.215 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 12:54:30.342 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 12:54:30.342 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 12:54:30.574 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 12:54:30.800 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 12:54:30.800 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 12:54:30.800 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 12:54:30.800 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 12:54:30.800 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 12:54:30.800 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 12:54:30.800 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 12:54:30.964 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 12:54:30.967 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 12:54:30.969 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 12:54:30.972 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538974470971 with initial instances count: 4
2018-10-08 12:54:30.982 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538974470982, current=UP, previous=STARTING]
2018-10-08 12:54:30.983 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 12:54:31.025 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 12:54:31.042 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 12:54:31.054 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 12:54:31.082 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 21.364 seconds (JVM running for 22.827)
2018-10-08 12:54:32.024 [RMI TCP Connection(7)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 12:56:22.723 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 12:56:22.838 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 12:56:22.838 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 12:56:22.838 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 12:56:22.840 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 12:56:22.840 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=null, password=null, phone=null, email=null, created=null, updated=null)]
2018-10-08 12:56:22.841 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 12:56:22.995 [http-nio-8083-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'username' cannot be null
### The error may involve cn.beiminzhiyu.dao.UserDao.insertUser-Inline
### The error occurred while setting parameters
### SQL: INSERT  INTO `mb_user`  (username,password,phone,email,created,updated) VALUES (?, ?,?,?,?,?);
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'username' cannot be null
; SQL []; Column 'username' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'username' cannot be null] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'username' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy102.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:56)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy106.insertUser(Unknown Source)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserServiceImpl.java:54)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$7a12be0f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$dddc0902.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-10-08 12:59:30.802 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:01:05.013 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:01:05.013 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 13:01:05.013 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 13:01:05.013 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 13:01:05.013 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=null, password=null, phone=null, email=null, created=null, updated=null)]
2018-10-08 13:01:05.013 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:01:05.035 [http-nio-8083-exec-6] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'username' cannot be null
### The error may involve cn.beiminzhiyu.dao.UserDao.insertUser-Inline
### The error occurred while setting parameters
### SQL: INSERT  INTO `mb_user`  (username,password,phone,email,created,updated) VALUES (?, ?,?,?,?,?);
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'username' cannot be null
; SQL []; Column 'username' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'username' cannot be null] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'username' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy102.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:56)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy106.insertUser(Unknown Source)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserServiceImpl.java:54)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$7a12be0f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at cn.beiminzhiyu.api.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$dddc0902.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-10-08 13:03:41.962 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 13:03:44.647 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 13:03:44.667 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 13:03:44.667 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 13:03:45.094 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 13:03:47.392 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:03:47.392 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:03:47.397 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:03:47.397 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:03:54.897 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 13:03:55.429 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 13:03:55.978 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 13:03:55.978 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 13:03:56.180 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 13:03:56.181 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 13:03:56.621 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:03:56.900 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 13:03:56.900 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 13:03:56.900 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 13:03:56.900 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 13:03:56.900 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 13:03:56.900 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 13:03:56.900 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 13:03:57.122 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 13:03:57.125 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 13:03:57.128 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 13:03:57.132 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538975037132 with initial instances count: 4
2018-10-08 13:03:57.146 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538975037146, current=UP, previous=STARTING]
2018-10-08 13:03:57.149 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 13:03:57.211 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 13:03:57.233 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 13:03:57.243 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 13:03:57.271 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 20.939 seconds (JVM running for 22.727)
2018-10-08 13:03:57.928 [RMI TCP Connection(13)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 13:04:16.302 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 13:04:16.397 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:04:16.397 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 13:04:16.397 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 13:04:16.399 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 13:04:16.399 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=null, password=null, phone=null, email=null, created=null, updated=null)]
2018-10-08 13:04:16.399 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:07:09.971 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 13:07:11.988 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 13:07:12.000 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 13:07:12.001 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 13:07:12.242 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 13:07:13.519 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:07:13.519 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:07:13.526 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:07:13.526 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:07:18.638 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 13:07:19.476 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 13:07:20.077 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 13:07:20.077 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 13:07:20.242 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 13:07:20.242 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 13:07:20.532 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:07:20.752 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 13:07:20.753 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 13:07:20.753 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 13:07:20.753 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 13:07:20.753 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 13:07:20.753 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 13:07:20.753 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 13:07:21.140 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 13:07:21.142 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 13:07:21.144 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 13:07:21.147 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538975241147 with initial instances count: 4
2018-10-08 13:07:21.157 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538975241157, current=UP, previous=STARTING]
2018-10-08 13:07:21.159 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 13:07:21.216 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 13:07:21.225 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 13:07:21.249 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 16.628 seconds (JVM running for 18.382)
2018-10-08 13:07:21.273 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 13:07:22.089 [RMI TCP Connection(8)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 13:07:29.409 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 13:07:29.522 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:07:29.522 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 13:07:29.522 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 13:07:29.524 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 13:07:29.524 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2018, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 13:07:29.524 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:07:39.619 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 13:07:39.785 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:07:39.795 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 13:07:39.796 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:08:10.204 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 13:08:11.910 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 13:08:11.922 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 13:08:11.923 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 13:08:12.103 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 13:08:13.332 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:08:13.333 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:08:13.338 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:08:13.338 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:08:17.938 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 13:08:18.103 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 13:08:18.454 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 13:08:18.454 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 13:08:18.571 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 13:08:18.571 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 13:08:18.783 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:08:18.984 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 13:08:18.984 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 13:08:18.984 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 13:08:18.984 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 13:08:18.984 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 13:08:18.984 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 13:08:18.984 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 13:08:19.150 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 13:08:19.152 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 13:08:19.154 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 13:08:19.156 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538975299156 with initial instances count: 4
2018-10-08 13:08:19.165 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538975299165, current=UP, previous=STARTING]
2018-10-08 13:08:19.167 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 13:08:19.209 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 13:08:19.217 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 13:08:19.226 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 13:08:19.246 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 14.089 seconds (JVM running for 15.547)
2018-10-08 13:08:19.878 [RMI TCP Connection(2)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 13:09:21.742 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 13:09:21.837 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:09:21.838 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 13:09:21.838 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 13:09:21.840 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 13:09:21.840 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2018, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 13:09:21.840 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:09:21.883 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 13:09:22.034 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:09:22.043 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 13:09:22.043 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:11:35.267 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 13:11:37.003 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 13:11:37.015 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 13:11:37.015 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 13:11:37.193 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 13:11:38.478 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:11:38.478 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:11:38.484 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:11:38.484 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:11:43.087 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 13:11:43.256 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 13:11:43.614 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 13:11:43.614 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 13:11:43.733 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 13:11:43.734 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 13:11:43.957 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:11:44.158 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 13:11:44.158 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 13:11:44.158 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 13:11:44.158 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 13:11:44.158 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 13:11:44.158 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 13:11:44.158 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 13:11:44.312 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 13:11:44.314 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 13:11:44.316 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 13:11:44.318 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538975504318 with initial instances count: 4
2018-10-08 13:11:44.328 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538975504328, current=UP, previous=STARTING]
2018-10-08 13:11:44.330 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 13:11:44.385 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 13:11:44.391 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 13:11:44.402 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 13:11:44.430 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 14.404 seconds (JVM running for 15.754)
2018-10-08 13:11:45.283 [RMI TCP Connection(2)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 13:16:44.161 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:18:08.148 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 13:18:08.224 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:18:08.224 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 13:18:08.224 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 13:18:08.226 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 13:18:08.226 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2018, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 13:18:08.226 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:18:08.276 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 13:18:08.423 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:18:08.434 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 13:18:08.435 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:20:35.916 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:20:35.916 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 13:20:35.916 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 13:20:35.916 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 13:20:35.916 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2018, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 13:20:35.916 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:20:35.945 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 13:20:36.067 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:20:36.068 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 13:20:36.068 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:21:44.162 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:22:11.326 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:22:11.326 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 13:22:11.326 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 13:22:11.326 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 13:22:11.326 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 13:22:11.326 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:22:11.369 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 13:22:11.482 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:22:11.482 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 13:22:11.482 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:22:39.803 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:22:39.803 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 13:22:39.803 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 13:22:39.803 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 13:22:39.803 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 13:22:39.803 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:22:39.813 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 13:22:39.957 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:22:39.957 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 13:22:39.957 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:26:44.164 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:27:17.319 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:27:17.319 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 13:27:17.319 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 13:27:17.319 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 13:27:17.319 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 13:27:17.319 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 13:27:17.428 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 13:27:17.623 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:27:17.623 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 13:27:17.623 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 13:29:10.219 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 13:29:11.998 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 13:29:12.013 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 13:29:12.014 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 13:29:12.208 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 13:29:13.959 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:29:13.959 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:29:13.965 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:29:13.966 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:29:18.925 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 13:29:19.124 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 13:29:19.548 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 13:29:19.548 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 13:29:19.683 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 13:29:19.683 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 13:29:19.910 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:29:20.116 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 13:29:20.116 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 13:29:20.116 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 13:29:20.116 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 13:29:20.116 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 13:29:20.116 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 13:29:20.116 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 13:29:20.281 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 13:29:20.284 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 13:29:20.285 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 13:29:20.288 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538976560288 with initial instances count: 4
2018-10-08 13:29:20.297 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538976560297, current=UP, previous=STARTING]
2018-10-08 13:29:20.298 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 13:29:20.343 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 13:29:20.354 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 13:29:20.364 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 13:29:20.387 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.448 seconds (JVM running for 17.045)
2018-10-08 13:29:21.039 [RMI TCP Connection(16)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 13:30:38.381 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 13:30:40.102 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 13:30:40.115 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 13:30:40.115 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 13:30:40.307 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 13:30:41.527 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:30:41.527 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:30:41.532 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 13:30:41.532 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 13:30:46.105 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 13:30:46.274 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 13:30:46.630 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 13:30:46.630 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 13:30:46.748 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 13:30:46.748 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 13:30:47.033 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 13:30:47.239 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 13:30:47.239 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 13:30:47.239 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 13:30:47.239 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 13:30:47.239 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 13:30:47.239 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 13:30:47.239 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 13:30:47.437 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 13:30:47.439 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 13:30:47.441 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 13:30:47.443 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538976647443 with initial instances count: 4
2018-10-08 13:30:47.451 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538976647451, current=UP, previous=STARTING]
2018-10-08 13:30:47.453 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 13:30:47.492 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 13:30:47.504 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 13:30:47.512 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 13:30:47.532 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 14.422 seconds (JVM running for 15.832)
2018-10-08 13:30:48.346 [RMI TCP Connection(4)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 14:00:26.860 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 14:00:28.735 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 14:00:28.748 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 14:00:28.749 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 14:00:29.069 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 14:00:30.272 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 14:00:30.272 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 14:00:30.278 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 14:00:30.278 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 14:00:35.329 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 14:00:35.524 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 14:00:35.941 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 14:00:35.942 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 14:00:36.072 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 14:00:36.072 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 14:00:36.304 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:00:36.558 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 14:00:36.558 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 14:00:36.558 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 14:00:36.558 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 14:00:36.558 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 14:00:36.558 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 14:00:36.558 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 14:00:36.755 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 14:00:36.758 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 14:00:36.760 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 14:00:36.764 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538978436764 with initial instances count: 4
2018-10-08 14:00:36.776 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538978436776, current=UP, previous=STARTING]
2018-10-08 14:00:36.778 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 14:00:36.841 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 14:00:36.854 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 14:00:36.865 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 14:00:36.891 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.504 seconds (JVM running for 17.232)
2018-10-08 14:00:37.808 [RMI TCP Connection(6)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 14:05:36.560 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:08:12.140 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 14:08:14.081 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 14:08:14.097 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 14:08:14.097 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 14:08:14.314 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 14:08:15.654 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 14:08:15.654 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 14:08:15.660 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 14:08:15.660 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 14:08:20.699 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 14:08:20.927 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 14:08:21.901 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 14:08:21.901 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 14:08:22.145 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 14:08:22.146 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 14:08:22.419 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:08:22.656 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 14:08:22.656 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 14:08:22.656 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 14:08:22.656 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 14:08:22.656 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 14:08:22.656 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 14:08:22.656 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 14:08:22.884 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 14:08:22.886 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 14:08:22.888 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 14:08:22.892 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538978902892 with initial instances count: 4
2018-10-08 14:08:22.906 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538978902905, current=UP, previous=STARTING]
2018-10-08 14:08:22.908 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 14:08:22.972 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 14:08:22.978 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 14:08:22.988 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 14:08:23.012 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 19.914 seconds (JVM running for 21.174)
2018-10-08 14:08:23.887 [RMI TCP Connection(10)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 14:18:29.190 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 14:18:31.080 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 14:18:31.095 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 14:18:31.095 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 14:18:31.291 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 14:18:32.615 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 14:18:32.616 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 14:18:32.622 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 14:18:32.622 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 14:18:37.686 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 14:18:37.876 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 14:18:38.290 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 14:18:38.290 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 14:18:38.422 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 14:18:38.422 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 14:18:38.671 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:18:38.899 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 14:18:38.899 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 14:18:38.899 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 14:18:38.899 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 14:18:38.899 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 14:18:38.899 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 14:18:38.899 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 14:18:39.126 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 14:18:39.128 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 14:18:39.130 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 14:18:39.134 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538979519134 with initial instances count: 0
2018-10-08 14:18:39.147 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538979519147, current=UP, previous=STARTING]
2018-10-08 14:18:39.149 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 14:18:39.221 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 14:18:39.231 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 14:18:39.254 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 14:18:39.255 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.635 seconds (JVM running for 16.881)
2018-10-08 14:18:40.218 [RMI TCP Connection(2)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 14:19:09.131 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 14:19:09.132 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 14:19:09.132 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 14:19:09.132 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 14:19:09.132 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 14:19:09.133 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2018-10-08 14:19:09.133 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 14:19:09.241 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 14:19:42.329 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 14:19:42.503 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:19:42.504 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 14:19:42.504 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 14:19:42.508 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 14:19:42.508 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=likun2017@126.com, created=null, updated=null)]
2018-10-08 14:19:42.508 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:19:42.604 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun2017@126.com"}}
2018-10-08 14:19:42.798 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:19:42.821 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 14:19:42.822 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:23:38.903 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:28:38.904 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:33:38.906 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:38:38.908 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:43:38.910 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:45:30.572 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 14:45:32.483 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 14:45:32.500 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 14:45:32.500 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 14:45:32.872 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 14:45:34.116 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 14:45:34.116 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 14:45:34.122 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 14:45:34.122 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 14:45:39.223 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 14:45:39.454 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 14:45:39.878 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 14:45:39.878 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 14:45:40.031 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 14:45:40.031 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 14:45:40.321 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 14:45:40.575 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 14:45:40.575 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 14:45:40.575 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 14:45:40.575 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 14:45:40.575 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 14:45:40.575 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 14:45:40.575 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 14:45:40.759 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 14:45:40.761 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 14:45:40.763 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 14:45:40.766 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538981140766 with initial instances count: 3
2018-10-08 14:45:40.776 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538981140775, current=UP, previous=STARTING]
2018-10-08 14:45:40.778 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 14:45:40.830 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 14:45:40.844 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 14:45:40.857 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 14:45:40.878 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 15.629 seconds (JVM running for 17.48)
2018-10-08 14:45:41.768 [RMI TCP Connection(6)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 14:46:18.798 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 14:46:18.877 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:46:18.878 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 14:46:18.878 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 14:46:18.879 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 14:46:18.879 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 14:46:18.879 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:46:18.922 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-1f38f6de-eb63-44c8-8ac9-41d9642bb319,value:57#####
2018-10-08 14:46:18.982 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:46:18.999 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-1f38f6de-eb63-44c8-8ac9-41d9642bb319"},"msg":"success"}
2018-10-08 14:46:18.999 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:47:30.598 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:47:30.599 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 14:47:30.599 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 14:47:30.599 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 14:47:30.599 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 14:47:30.599 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:47:30.619 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-3759085e-8079-4f05-b4b6-de641d82d136,value:57#####
2018-10-08 14:47:30.671 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:47:30.671 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-3759085e-8079-4f05-b4b6-de641d82d136"},"msg":"success"}
2018-10-08 14:47:30.671 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:48:57.343 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:48:57.343 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 14:48:57.343 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 14:48:57.343 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 14:48:57.343 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 14:48:57.343 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:48:57.353 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-ee6b6711-43b1-4d93-9358-6f7b3bc70a14,value:57#####
2018-10-08 14:48:57.390 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:48:57.390 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-ee6b6711-43b1-4d93-9358-6f7b3bc70a14"},"msg":"success"}
2018-10-08 14:48:57.390 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:49:19.310 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:49:19.310 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 14:49:19.310 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 14:49:19.310 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 14:49:19.310 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 14:49:19.310 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:49:19.332 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-fa181ee8-5eff-46e9-a998-9ec58b0edff3,value:57#####
2018-10-08 14:49:19.395 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:49:19.396 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-fa181ee8-5eff-46e9-a998-9ec58b0edff3"},"msg":"success"}
2018-10-08 14:49:19.396 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:49:37.036 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:49:37.036 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 14:49:37.036 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 14:49:37.036 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 14:49:37.036 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 14:49:37.036 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:49:37.041 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-07176b48-adf2-4156-9964-957dde62756f,value:57#####
2018-10-08 14:49:37.080 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:49:37.080 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-07176b48-adf2-4156-9964-957dde62756f"},"msg":"success"}
2018-10-08 14:49:37.080 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:49:48.072 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:49:48.073 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 14:49:48.073 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 14:49:48.073 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 14:49:48.073 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=123456, phone=null, email=null, created=null, updated=null)]
2018-10-08 14:49:48.073 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:49:48.081 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:49:48.081 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"用户名或密码错误！！"}
2018-10-08 14:49:48.082 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:50:05.625 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:50:05.625 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 14:50:05.625 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 14:50:05.625 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 14:50:05.625 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 14:50:05.625 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 14:50:05.630 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-01979fcd-33a2-44c3-bfad-3281e87d6c45,value:57#####
2018-10-08 14:50:05.673 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:50:05.673 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-01979fcd-33a2-44c3-bfad-3281e87d6c45"},"msg":"success"}
2018-10-08 14:50:05.674 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 14:50:40.579 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:01:49.986 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 15:01:51.946 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 15:01:51.962 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 15:01:51.962 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 15:01:52.283 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 15:01:53.630 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 15:01:53.631 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 15:01:53.642 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 15:01:53.642 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 15:02:00.431 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 15:02:00.882 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 15:02:01.552 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 15:02:01.552 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 15:02:01.856 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 15:02:01.856 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 15:02:02.401 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:02:02.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 15:02:02.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 15:02:02.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 15:02:02.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 15:02:02.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 15:02:02.844 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 15:02:02.845 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 15:02:03.183 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 15:02:03.192 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 15:02:03.199 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 15:02:03.206 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538982123206 with initial instances count: 3
2018-10-08 15:02:03.238 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538982123238, current=UP, previous=STARTING]
2018-10-08 15:02:03.241 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 15:02:03.360 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 15:02:03.501 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 15:02:03.522 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 15:02:03.602 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 19.265 seconds (JVM running for 20.85)
2018-10-08 15:02:04.994 [RMI TCP Connection(5)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 15:03:27.676 [http-nio-8083-exec-10] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 15:03:27.761 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:03:27.761 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:03:27.761 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:03:27.765 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:03:27.765 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[null]
2018-10-08 15:03:27.765 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:03:27.772 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:03:27.793 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"token不能为空"}
2018-10-08 15:03:27.793 [http-nio-8083-exec-10] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:04:45.388 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:04:45.388 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:04:45.388 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:04:45.388 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:04:45.389 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[null]
2018-10-08 15:04:45.389 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:04:45.389 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:04:45.389 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"token不能为空"}
2018-10-08 15:04:45.389 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:05:25.092 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:05:25.092 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:05:25.092 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:05:25.092 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:05:25.092 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[null]
2018-10-08 15:05:25.092 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:05:25.092 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:05:25.092 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"token不能为空"}
2018-10-08 15:05:25.092 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:07:02.849 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:07:18.161 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 15:07:22.000 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 15:07:22.012 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 15:07:22.012 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 15:07:22.241 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 15:07:24.210 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 15:07:24.210 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 15:07:24.217 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 15:07:24.217 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 15:07:30.315 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 15:07:30.568 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 15:07:31.152 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 15:07:31.152 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 15:07:31.350 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 15:07:31.351 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 15:07:31.751 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:07:32.105 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 15:07:32.106 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 15:07:32.106 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 15:07:32.106 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 15:07:32.106 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 15:07:32.106 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 15:07:32.106 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 15:07:32.328 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 15:07:32.330 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 15:07:32.333 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 15:07:32.336 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1538982452335 with initial instances count: 3
2018-10-08 15:07:32.348 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1538982452348, current=UP, previous=STARTING]
2018-10-08 15:07:32.351 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 15:07:32.415 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 15:07:32.432 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 15:07:32.445 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 15:07:32.475 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 20.681 seconds (JVM running for 22.41)
2018-10-08 15:07:33.603 [RMI TCP Connection(7)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 15:07:52.141 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 15:07:52.233 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:07:52.233 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:07:52.233 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:07:52.235 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:07:52.235 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-01979fcd-33a2-44c3-bfad-3281e87d6c45]
2018-10-08 15:07:52.235 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:07:52.313 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:07:52.331 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538979583000,"email":"likun2017@126.com","id":57,"updated":1538979583000,"username":"likun2017"},"msg":"success"}
2018-10-08 15:07:52.331 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:08:00.125 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:08:00.125 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:08:00.125 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:08:00.125 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:08:00.125 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-01979fcd-33a2-44c3-bfad-3281e87d6c45]
2018-10-08 15:08:00.125 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:08:00.160 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:08:00.160 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538979583000,"email":"likun2017@126.com","id":57,"updated":1538979583000,"username":"likun2017"},"msg":"success"}
2018-10-08 15:08:00.160 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:09:25.200 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:09:25.200 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:09:25.200 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:09:25.200 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:09:25.200 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-01979fcd-33a2-44c3-bfad-3281e87d6c45]
2018-10-08 15:09:25.200 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:09:25.231 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:09:25.232 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538979583000,"email":"likun2017@126.com","id":57,"updated":1538979583000,"username":"likun2017"},"msg":"success"}
2018-10-08 15:09:25.232 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:11:08.946 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:11:08.946 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:11:08.946 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:11:08.946 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:11:08.946 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-01979fcd-33a2-44c3-bfad-3281e87d6c45]
2018-10-08 15:11:08.946 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:11:08.981 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:11:08.982 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538979583000,"email":"likun2017@126.com","id":57,"updated":1538979583000,"username":"likun2017"},"msg":"success"}
2018-10-08 15:11:08.982 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:11:14.425 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:11:14.426 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:11:14.426 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:11:14.426 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:11:14.426 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-01979fcd-33a2-44c3-bfad-3281e87d6c45]
2018-10-08 15:11:14.426 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:11:14.453 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:11:14.453 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538979583000,"email":"likun2017@126.com","id":57,"updated":1538979583000,"username":"likun2017"},"msg":"success"}
2018-10-08 15:11:14.453 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:12:08.635 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:12:08.635 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 15:12:08.635 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:12:08.635 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 15:12:08.636 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 15:12:08.636 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:12:08.647 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-54106e1e-a9c7-451f-82a8-2cc25eb8e48d,value:57#####
2018-10-08 15:12:08.691 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:12:08.694 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-54106e1e-a9c7-451f-82a8-2cc25eb8e48d"},"msg":"success"}
2018-10-08 15:12:08.694 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:12:32.109 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:12:56.826 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:12:56.826 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:12:56.826 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:12:56.826 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:12:56.826 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-54106e1e-a9c7-451f-82a8-2cc25eb8e48d]
2018-10-08 15:12:56.826 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:12:56.855 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:12:56.855 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538979583000,"email":"likun2017@126.com","id":57,"updated":1538979583000,"username":"likun2017"},"msg":"success"}
2018-10-08 15:12:56.855 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:13:01.204 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:13:01.204 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:13:01.204 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:13:01.204 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:13:01.204 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-54106e1e-a9c7-451f-82a8-2cc25eb8e48d]
2018-10-08 15:13:01.204 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:13:01.231 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:13:01.231 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538979583000,"email":"likun2017@126.com","id":57,"updated":1538979583000,"username":"likun2017"},"msg":"success"}
2018-10-08 15:13:01.231 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:17:12.675 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:17:12.675 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:17:12.675 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:17:12.675 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:17:12.675 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-54106e1e-a9c7-451f-82a8-2cc25eb8e48d]
2018-10-08 15:17:12.675 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:17:12.698 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:17:12.698 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"token无效或已过期！！"}
2018-10-08 15:17:12.698 [http-nio-8083-exec-6] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:17:29.051 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:17:29.051 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:17:29.051 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:17:29.051 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:17:29.051 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-54106e1e-a9c7-451f-82a8-2cc25eb8e48d]
2018-10-08 15:17:29.051 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:17:29.058 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:17:29.058 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"token无效或已过期！！"}
2018-10-08 15:17:29.058 [http-nio-8083-exec-9] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:17:32.110 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:17:37.253 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:17:37.253 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:17:37.253 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:17:37.253 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:17:37.253 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-54106e1e-a9c7-451f-82a8-2cc25eb8e48d]
2018-10-08 15:17:37.253 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:17:37.276 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:17:37.277 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"token无效或已过期！！"}
2018-10-08 15:17:37.277 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:17:53.997 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:17:53.997 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 15:17:53.997 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:17:53.997 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 15:17:53.997 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 15:17:53.997 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:17:54.018 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-1575f27b-42ec-4407-ae73-6e8d1a9eb6d3,value:57#####
2018-10-08 15:17:54.056 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:17:54.056 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-1575f27b-42ec-4407-ae73-6e8d1a9eb6d3"},"msg":"success"}
2018-10-08 15:17:54.056 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:18:05.800 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:18:05.800 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 15:18:05.800 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:18:05.800 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 15:18:05.800 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 15:18:05.800 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:18:05.810 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-8cf4153f-5bb0-46ec-9786-6fe4417db559,value:57#####
2018-10-08 15:18:05.848 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:18:05.849 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-8cf4153f-5bb0-46ec-9786-6fe4417db559"},"msg":"success"}
2018-10-08 15:18:05.849 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:19:10.551 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:19:10.551 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 15:19:10.551 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:19:10.551 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 15:19:10.551 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 15:19:10.551 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:19:10.578 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-dd880102-e381-4a53-a224-cd3c269c04e8,value:57#####
2018-10-08 15:19:10.616 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:19:10.616 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-dd880102-e381-4a53-a224-cd3c269c04e8"},"msg":"success"}
2018-10-08 15:19:10.616 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:20:47.537 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:20:47.537 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 15:20:47.537 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:20:47.537 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 15:20:47.537 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 15:20:47.537 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:20:47.552 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-3f34dbc1-d42f-4fed-b4c9-c5f9c590772b,value:57#####
2018-10-08 15:20:47.586 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:20:47.587 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-3f34dbc1-d42f-4fed-b4c9-c5f9c590772b"},"msg":"success"}
2018-10-08 15:20:47.587 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:21:01.522 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:21:01.522 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:21:01.522 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:21:01.522 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:21:01.522 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-3f34dbc1-d42f-4fed-b4c9-c5f9c590772b]
2018-10-08 15:21:01.522 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:21:01.541 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:21:01.541 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538979583000,"email":"likun2017@126.com","id":57,"updated":1538979583000,"username":"likun2017"},"msg":"success"}
2018-10-08 15:21:01.541 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:21:31.456 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:21:31.456 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 15:21:31.456 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:21:31.456 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 15:21:31.456 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 15:21:31.456 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:21:31.466 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-68f4bf5f-7e66-4f37-bc22-d9ad590ce751,value:57#####
2018-10-08 15:21:31.507 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:21:31.507 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-68f4bf5f-7e66-4f37-bc22-d9ad590ce751"},"msg":"success"}
2018-10-08 15:21:31.507 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:22:32.112 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:23:28.304 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:23:28.304 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:23:28.304 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:23:28.305 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:23:28.305 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-68f4bf5f-7e66-4f37-bc22-d9ad590ce751]
2018-10-08 15:23:28.305 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:23:28.327 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:23:28.327 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"token无效或已过期！！"}
2018-10-08 15:23:28.327 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:23:43.951 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:23:43.952 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 15:23:43.952 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:23:43.952 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 15:23:43.952 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 15:23:43.952 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:23:44.013 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-781a3df7-b334-4fd7-ad45-8c393425b311,value:57#####
2018-10-08 15:23:44.096 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:23:44.096 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-781a3df7-b334-4fd7-ad45-8c393425b311"},"msg":"success"}
2018-10-08 15:23:44.096 [http-nio-8083-exec-5] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:26:07.890 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:26:07.890 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 15:26:07.890 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:26:07.890 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 15:26:07.890 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-781a3df7-b334-4fd7-ad45-8c393425b311]
2018-10-08 15:26:07.890 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:26:07.905 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:26:07.906 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"token无效或已过期！！"}
2018-10-08 15:26:07.906 [http-nio-8083-exec-7] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:26:18.421 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:26:18.421 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 15:26:18.421 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:26:18.422 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 15:26:18.422 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=1112222, phone=null, email=null, created=null, updated=null)]
2018-10-08 15:26:18.422 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:26:18.439 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:26:18.439 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":500,"msg":"用户名或密码错误！！"}
2018-10-08 15:26:18.439 [http-nio-8083-exec-8] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:26:28.596 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:26:28.596 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 15:26:28.596 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 15:26:28.596 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 15:26:28.596 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null)]
2018-10-08 15:26:28.596 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 15:26:28.603 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-f0b0fcef-cf09-4b8e-a30a-bae9f66e5438,value:57#####
2018-10-08 15:26:28.650 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:26:28.650 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-f0b0fcef-cf09-4b8e-a30a-bae9f66e5438"},"msg":"success"}
2018-10-08 15:26:28.650 [http-nio-8083-exec-1] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 15:27:32.113 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:32:32.115 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:37:32.117 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:42:32.119 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:47:32.119 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:52:32.121 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 15:57:32.123 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:02:32.124 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:07:32.125 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:12:32.127 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:17:32.128 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:22:32.129 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:27:32.131 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:32:32.132 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:37:32.134 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:42:32.134 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:47:32.136 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:52:32.137 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 16:57:32.139 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:02:32.140 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:07:32.141 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:12:32.143 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:17:32.144 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:22:32.146 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:27:32.148 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:32:32.149 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:37:32.151 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:42:32.152 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:47:32.154 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:52:32.154 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 17:57:32.155 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 18:02:32.157 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 18:07:32.159 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 18:12:32.161 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 21:04:12.419 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 21:04:14.295 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 21:04:14.307 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 21:04:14.308 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 21:04:14.509 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 21:04:15.835 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 21:04:15.835 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 21:04:15.841 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 21:04:15.841 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 21:04:20.664 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 21:04:20.846 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 21:04:21.306 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 21:04:21.306 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 21:04:36.318 [main] INFO  cn.beiminzhiyu.MemberApp - No active profile set, falling back to default profiles: default
2018-10-08 21:04:40.545 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2018-10-08 21:04:40.578 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-10-08 21:04:40.578 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
2018-10-08 21:04:41.016 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-10-08 21:04:43.566 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 21:04:43.566 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 21:04:43.574 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-10-08 21:04:43.574 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-08 21:04:50.040 [main] WARN  org.springframework.cloud.starter.eureka.server.EurekaServerStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka-server is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka-server
2018-10-08 21:04:50.521 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-10-08 21:04:51.094 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-10-08 21:04:51.094 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-10-08 21:04:51.326 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-10-08 21:04:51.326 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-10-08 21:04:51.825 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 21:04:52.176 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-10-08 21:04:52.176 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-10-08 21:04:52.176 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-10-08 21:04:52.176 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-10-08 21:04:52.176 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-10-08 21:04:52.176 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-10-08 21:04:52.176 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-10-08 21:04:52.438 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-10-08 21:04:52.442 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-10-08 21:04:52.445 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-10-08 21:04:52.450 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1539003892450 with initial instances count: 3
2018-10-08 21:04:52.466 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1539003892466, current=UP, previous=STARTING]
2018-10-08 21:04:52.468 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083: registering service...
2018-10-08 21:04:52.546 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:8083 - registration status: 204
2018-10-08 21:04:52.573 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2018-10-08 21:04:52.590 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-10-08 21:04:52.629 [main] INFO  cn.beiminzhiyu.MemberApp - Started MemberApp in 23.947 seconds (JVM running for 26.762)
2018-10-08 21:04:53.576 [RMI TCP Connection(11)-127.0.0.1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2018-10-08 21:05:45.828 [http-nio-8083-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-08 21:05:45.929 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 21:05:45.929 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/findUserByToken
2018-10-08 21:05:45.929 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 21:05:45.931 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.findUserByToken(String)
2018-10-08 21:05:45.931 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[token_member-f0b0fcef-cf09-4b8e-a30a-bae9f66e5438]
2018-10-08 21:05:45.931 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 21:05:46.007 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 21:05:46.028 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"created":1538979583000,"email":"likun2017@126.com","id":57,"updated":1538979583000,"username":"likun2017"},"msg":"success"}
2018-10-08 21:05:46.028 [http-nio-8083-exec-2] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 21:06:08.742 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 21:06:08.742 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/login
2018-10-08 21:06:08.742 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 21:06:08.742 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.login(UserEntity)
2018-10-08 21:06:08.742 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2017, password=111111, phone=null, email=null, created=null, updated=null, openId=null)]
2018-10-08 21:06:08.742 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 21:06:08.750 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.CommonRedisCommon - #####放入reids信息：key:token_member-09b12696-e44f-49a6-94a8-9e13a42fa53d,value:57#####
2018-10-08 21:06:08.784 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 21:06:08.792 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"data":{"memberToken":"token_member-09b12696-e44f-49a6-94a8-9e13a42fa53d"},"msg":"success"}
2018-10-08 21:06:08.792 [http-nio-8083-exec-3] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 21:09:52.179 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 21:14:52.180 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-10-08 21:19:05.111 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 21:19:05.111 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求地址:http://localhost:8083/user/register
2018-10-08 21:19:05.111 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求方式:POST
2018-10-08 21:19:05.112 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法:ResponseData cn.beiminzhiyu.api.service.impl.UserServiceImpl.register(UserEntity)
2018-10-08 21:19:05.112 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - 请求类方法参数:[UserEntity(id=null, username=likun2018, password=111111, phone=null, email=likun@beiminzhiyu.cn, created=null, updated=null, openId=null)]
2018-10-08 21:19:05.112 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - ===============请求内容===============
2018-10-08 21:19:05.165 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.api.service.impl.UserServiceImpl - ######发送消息到消息平台#####:{"header":{"interfaceType":"email"},"content":{"mail":"likun@beiminzhiyu.cn"}}
2018-10-08 21:19:05.942 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 21:19:05.944 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - Response内容:{"code":200,"msg":"success"}
2018-10-08 21:19:05.945 [http-nio-8083-exec-4] INFO  cn.beiminzhiyu.common.LogAspectService - --------------返回内容----------------
2018-10-08 21:19:52.182 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
